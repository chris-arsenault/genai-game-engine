name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('playwright.config.js', 'package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Chromium
        run: npx playwright install --with-deps chromium

      - name: Run unit tests
        run: npm test

      - name: Run Playwright smoke suite
        env:
          PLAYWRIGHT_JUNIT_OUTPUT_NAME: playwright-results.xml
          PLAYWRIGHT_HTML_REPORT: playwright-report
        run: npx playwright test

      - name: Capture performance baseline snapshot
        run: npm run telemetry:performance:baseline -- --runs 5 --out telemetry-artifacts/performance/ci-baseline.json

      - name: Publish performance baseline summary
        if: always()
        run: node scripts/telemetry/postPerformanceSummary.js telemetry-artifacts/performance/ci-baseline.json telemetry-artifacts/performance/ci-baseline-summary.md

      - name: Export inspector telemetry artifacts
        if: always()
        env:
          TELEMETRY_EXPORT_DIR: telemetry-artifacts
          TELEMETRY_CI_COMMANDS_PATH: .github/ci/telemetry-commands.json
        run: |
          set -euo pipefail
          CONTEXT_JSON=$(node -e "const payload = { runId: process.env.GITHUB_RUN_ID, runAttempt: process.env.GITHUB_RUN_ATTEMPT, workflow: process.env.GITHUB_WORKFLOW, job: process.env.GITHUB_JOB }; console.log(JSON.stringify(payload));")
          npm run export-telemetry -- --artifactDir "$TELEMETRY_EXPORT_DIR" --metadata "$TELEMETRY_EXPORT_DIR/ci-artifacts.json" --prefix "ci-${GITHUB_RUN_ID}" --formats json,csv,transcript-csv,transcript-md --context "$CONTEXT_JSON"

      - name: Summarize telemetry provider metrics
        if: always()
        run: node scripts/telemetry/reportProviderMetrics.js --metadata telemetry-artifacts/ci-artifacts.json

      - name: Bundle Playwright HTML report
        if: always()
        run: |
          if [ -d playwright-report ]; then
            tar -czf playwright-report.tar.gz playwright-report
          fi

      - name: Publish Playwright job summary
        if: always()
        run: |
          node <<'EOF'
          const fs = require('fs');
          const path = 'playwright-report/data/report.json';
          const summaryFile = process.env.GITHUB_STEP_SUMMARY;
          if (!summaryFile) {
            process.exit(0);
          }
          const lines = [];
          lines.push('## Playwright Smoke Summary');
          if (fs.existsSync(path)) {
            try {
              const data = JSON.parse(fs.readFileSync(path, 'utf8'));
              const stats = data?.stats || {};
              const total = stats.total ?? 'unknown';
              const expected = stats.expected ?? 0;
              const unexpected = stats.unexpected ?? 0;
              const skipped = stats.skipped ?? 0;
              lines.push('');
              lines.push(`- **Total tests**: ${total}`);
              lines.push(`- **Passed**: ${expected}`);
              lines.push(`- **Failed**: ${unexpected}`);
              lines.push(`- **Skipped**: ${skipped}`);
            } catch (error) {
              lines.push('');
              lines.push(`⚠️ Failed to parse Playwright report: ${error.message}`);
            }
          } else {
            lines.push('');
            lines.push('⚠️ Playwright report not generated.');
          }
          lines.push('');
          lines.push('Artifacts:');
          lines.push('- HTML report: `playwright-report/index.html` (see artifact **playwright-artifacts**)');
          lines.push('- Trace bundle: `test-results/` (download from artifact **playwright-artifacts**)');
          fs.appendFileSync(summaryFile, lines.join('\\n') + '\\n');
          EOF

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            playwright-results.xml
            test-results
            playwright-report
            playwright-report.tar.gz
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload inspector telemetry artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: inspector-telemetry
          path: telemetry-artifacts
          if-no-files-found: warn
          retention-days: 14
