class t{constructor(){this.nextEntityId=0,this.entities=new Map,this.entitiesByTag=new Map,this.recycledIds=[]}createEntity(t=null){let e;return e=this.recycledIds.length>0?this.recycledIds.pop():this.nextEntityId++,this.entities.set(e,{id:e,active:!0,tag:t,componentTypes:new Set}),t&&(this.entitiesByTag.has(t)||this.entitiesByTag.set(t,new Set),this.entitiesByTag.get(t).add(e)),e}destroyEntity(t){const e=this.entities.get(t);if(!e)return!1;if(e.tag){const s=this.entitiesByTag.get(e.tag);s&&(s.delete(t),0===s.size&&this.entitiesByTag.delete(e.tag))}return this.entities.delete(t),this.recycledIds.push(t),!0}hasEntity(t){return this.entities.has(t)}getAllEntities(){const t=[];for(const[e,s]of this.entities)s.active&&t.push(e);return t}getEntitiesByTag(t){const e=this.entitiesByTag.get(t);if(!e)return[];const s=[];for(const n of e){const t=this.entities.get(n);t&&t.active&&s.push(n)}return s}setTag(t,e){const s=this.entities.get(t);if(s){if(s.tag){const e=this.entitiesByTag.get(s.tag);e&&(e.delete(t),0===e.size&&this.entitiesByTag.delete(s.tag))}s.tag=e,this.entitiesByTag.has(e)||this.entitiesByTag.set(e,new Set),this.entitiesByTag.get(e).add(t)}}getTag(t){const e=this.entities.get(t);return e?e.tag:null}activate(t){const e=this.entities.get(t);e&&(e.active=!0)}deactivate(t){const e=this.entities.get(t);e&&(e.active=!1)}isActive(t){const e=this.entities.get(t);return!!e&&e.active}addComponentType(t,e){const s=this.entities.get(t);s&&s.componentTypes.add(e)}removeComponentType(t,e){const s=this.entities.get(t);s&&s.componentTypes.delete(e)}getComponentTypes(t){const e=this.entities.get(t);return e?e.componentTypes:new Set}getEntityCount(){return this.entities.size}getActiveEntityCount(){let t=0;for(const e of this.entities.values())e.active&&t++;return t}clear(){this.entities.clear(),this.entitiesByTag.clear(),this.recycledIds=[],this.nextEntityId=0}}class e{constructor(t){this.entityManager=t,this.components=new Map,this.queryCache=new Map}addComponent(t,e){if(!this.entityManager.hasEntity(t))throw new Error(`Cannot add component to non-existent entity ${t}`);const s=e.type;this.components.has(s)||this.components.set(s,new Map),this.components.get(s).set(t,e),this.entityManager.addComponentType(t,s),this.queryCache.clear()}removeComponent(t,e){const s=this.components.get(e);if(!s)return!1;const n=s.delete(t);return n&&(this.entityManager.removeComponentType(t,e),this.queryCache.clear()),n}getComponent(t,e){const s=this.components.get(e);return s?s.get(t):void 0}hasComponent(t,e){const s=this.components.get(e);return!!s&&s.has(t)}getComponentsOfType(t){return this.components.get(t)||new Map}queryEntities(...t){if(0===t.length)return this.entityManager.getAllEntities();const e=t.sort().join(",");if(this.queryCache.has(e))return this.queryCache.get(e);let s=t[0],n=this.components.get(t[0])?.size||0;for(let r=1;r<t.length;r++){const e=this.components.get(t[r])?.size||0;e<n&&(s=t[r],n=e)}if(0===n)return this.queryCache.set(e,[]),[];const i=this.components.get(s),o=[];for(const r of i.keys()){if(!this.entityManager.isActive(r))continue;let e=!0;for(const n of t)if(n!==s&&!this.hasComponent(r,n)){e=!1;break}e&&o.push(r)}return this.queryCache.set(e,o),o}queryEntitiesAny(...t){if(0===t.length)return[];const e=new Set;for(const s of t){const t=this.components.get(s);if(t)for(const s of t.keys())this.entityManager.isActive(s)&&e.add(s)}return Array.from(e)}removeAllComponents(t){const e=this.entityManager.getComponentTypes(t);for(const s of e)this.removeComponent(t,s)}getComponentCount(){let t=0;for(const e of this.components.values())t+=e.size;return t}getComponentCountOfType(t){const e=this.components.get(t);return e?e.size:0}clear(){this.components.clear(),this.queryCache.clear()}getComponentTypes(){return Array.from(this.components.keys())}}class s{constructor(t,e,s){this.entityManager=t,this.componentRegistry=e,this.eventBus=s,this.systems=[],this.systemsByName=new Map}registerSystem(t,e=null){if(e&&this.systemsByName.has(e))throw new Error(`System with name "${e}" already registered`);t.componentRegistry=this.componentRegistry,t.eventBus=this.eventBus,this.systems.push(t),e&&this.systemsByName.set(e,t),this.systems.sort((t,e)=>t.priority-e.priority),t.init()}unregisterSystem(t){const e=this.systemsByName.get(t);if(!e)return!1;e.cleanup();const s=this.systems.indexOf(e);return-1!==s&&this.systems.splice(s,1),this.systemsByName.delete(t),!0}getSystem(t){return this.systemsByName.get(t)}update(t){for(let e=0;e<this.systems.length;e++){const s=this.systems[e];if(!s.enabled)continue;const n=this.componentRegistry.queryEntities(...s.requiredComponents);s.update(t,n)}}init(){for(const t of this.systems)t.init()}cleanup(){for(const t of this.systems)t.cleanup()}enableSystem(t){const e=this.systemsByName.get(t);return!!e&&(e.enable(),!0)}disableSystem(t){const e=this.systemsByName.get(t);return!!e&&(e.disable(),!0)}getSystemNames(){return Array.from(this.systemsByName.keys())}getSystemCount(){return this.systems.length}getEnabledSystemCount(){let t=0;for(const e of this.systems)e.enabled&&t++;return t}}export{e as C,t as E,s as S};
//# sourceMappingURL=engine-Dl-Z51O5.js.map
